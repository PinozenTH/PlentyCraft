name: Build
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - "ver/**"
  schedule:
    - cron: '0 0 1 * *'  # Run at 00:00 on the first day of every month

jobs:
  update-check:
    runs-on: ubuntu-latest
    outputs:
      update_available: ${{ steps.check_update.outputs.update_available }}
      latest_version: ${{ steps.check_update.outputs.latest_version }}
      latest_build: ${{ steps.check_update.outputs.latest_build }}
    steps:
      - uses: actions/checkout@v4
      - name: Check for Purpur updates
        id: check_update
        run: |
          PURPUR_INFO=$(curl -s https://api.purpurmc.org/v2/purpur)
          LATEST_VERSION=$(echo $PURPUR_INFO | jq -r '.versions[-1]')
          LATEST_BUILD=$(curl -s https://api.purpurmc.org/v2/purpur/$LATEST_VERSION/latest | jq -r '.build')
          CURRENT_VERSION=$(grep 'purpurVersion' gradle.properties | cut -d'=' -f2)
          CURRENT_BUILD=$(grep 'purpurCommit' gradle.properties | cut -d'=' -f2)
          echo "latest_version=$LATEST_VERSION" >> $GITHUB_OUTPUT
          echo "latest_build=$LATEST_BUILD" >> $GITHUB_OUTPUT
          if [ "$LATEST_VERSION" != "$CURRENT_VERSION" ] || [ "$LATEST_BUILD" != "$CURRENT_BUILD" ]; then
            echo "update_available=true" >> $GITHUB_OUTPUT
          else
            echo "update_available=false" >> $GITHUB_OUTPUT
          fi

  update-and-build:
    needs: update-check
    runs-on: ubuntu-latest
    if: needs.update-check.outputs.update_available == 'true' || github.event_name != 'schedule'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: 'gradle'
      - uses: gradle/wrapper-validation-action@v2
      - uses: gradle/actions/setup-gradle@v3
      - name: Configure Git
        run: git config --global user.email "pzth.bots@gmail.com" && git config --global user.name "PinontX"
      - name: Update from Purpur
        if: needs.update-check.outputs.update_available == 'true'
        run: |
          sed -i 's/purpurVersion=.*/purpurVersion=${{ needs.update-check.outputs.latest_version }}/' gradle.properties
          sed -i 's/purpurCommit=.*/purpurCommit=${{ needs.update-check.outputs.latest_build }}/' gradle.properties
          ./gradlew updateUpstream
          git add .
          git commit -m "Update Purpur to ${{ needs.update-check.outputs.latest_version }} build ${{ needs.update-check.outputs.latest_build }}" || echo "No changes to commit"
          git push
      - name: Apply Patches
        run: ./gradlew applyPatches --no-daemon --stacktrace
      - name: Build
        run: ./gradlew build --no-daemon --stacktrace
      - name: Rebuild on Failure
        if: ${{ failure() }}
        run: |
          ./gradlew clean cleanCache
          ./gradlew applyPatches --no-daemon --stacktrace 
          ./gradlew build --no-daemon --stacktrace
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Folia-Server
          path: build/libs/*.jar
